//У вас есть прямоугольник ﻿n ×mn×m﻿.Вы закрашиваете в нем максимально возможный по площади квадрат таким образом, чтобы незакрашенная часть осталась связанным прямоугольником.После
//
//этого вы берете новое ведро с краской и продолжаете закрашивание оставшейся части вышеописанным способом.Сколько ведер с краской вам потребуется ?
//
//Например, если у вас есть прямоугольник ﻿3 ×43×4﻿, то в нем можно закрасить квадрат ﻿ 3 ×3 3×3﻿ таким образом, что оставшаяся часть займет прямоугольник размером ﻿3×13×1﻿, который получится закрасить тремя квадратами.На весь процесс понадобится четыре ведра с краской.
//
//Формат входных данных
//
//Даны два натуральных числа ﻿n, m\left(1 \leqslant n, m \leqslant 10 ^ {18}\right)n, m(1⩽n, m⩽10
//	18
//)﻿.Обратите внимание, что вам понадобится 64 - битный тип данных для ввода.
//
//Формат выходных данных
//
//Выведите одно число ﻿ - −﻿ количество ведер с краской.

#include <iostream>
using namespace std;

int main()
{
	int a, b;
	cin >> a >> b;
	int numBucket = 0; 
	
	if (a < b) {
		int temp = a;//в нашей задаче длина всегда больше или равна ширине
		a = b;
		b = temp;
	}
	if (a % b == 0) cout << /*numBucket =*/ a / b << endl;
	else {
		while (a % b != 0) {
			numBucket += a / b;
			a %= b;
			if (a < b) {
				int temp = a;//в нашей задаче длина всегда больше или равна ширине
				a = b;
				b = temp;
			}
		}
		numBucket += a / b;
		cout << numBucket << endl;
	}	
}

